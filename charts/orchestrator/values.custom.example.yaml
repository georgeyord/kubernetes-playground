#################
#### Anchors ####
#################

x-grafana-host: &grafana-host grafana.kubernetes.local
x-grafana-admin-password: &grafana-admin-password x-mongo-express-basicauth-password: &mongo-express-basicauth-password CHANGEME


x-mongo-express-host: &mongo-express-host mongodb.kubernetes.local
x-mongo-express-basicauth-user: &mongo-express-basicauth-user mongodb
x-mongo-express-basicauth-password: &mongo-express-basicauth-password CHANGEME

x-affinity-db: &affinity-db
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: db
            operator: Exists
x-affinity-logging: &affinity-logging
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: logging
            operator: Exists

####################
# Global variables #
####################

global:
  default:
    # Default BasicAuth username:password pair to use in ingresses
    # Online generator: https://rudrastyh.com/tools/htpasswd-generator
    # basicauth:
    #   auth: foo:[SHA1]
    # The owner of the let's encrypt certificates
    # email: CHANGEME@kubernetes.local
    # To issue letsencrypt production certificates
    # ingress:
    #   issuer:
    #     name: cm-cluster-issuer-letsencrypt-production

####################
# Experiment hello #
####################

experiment-hello:
  ingress:
    default:
      # To use a custom domain name
      # hosts:
      # - hello.kubernetes.local
      # To issue letsencrypt certificate for this domain name
      # certManager:
      #   enabled: true
      # To use TLS for this domain name
      # tls:
      # - hosts:
      #   - hello.kubernetes.local

###########
# MongoDB #
###########

mongodb:
  container:
    # To use a persistent volume
    # volumeMounts:
    #   - name: data
    #     mountPath: /data/db
  deployment:
    # To set a specific affinity
    <<: *affinity-db
    # # To use a persistent volume
    # volumeClaimTemplates:
    #   - name: data
    #     accessModes: [ ReadWriteOnce ]
    #     storage: 1Gi

#################
# Mongo express #
#################

mongo-express:
  application:
    # To use in Basic authentication
    username: *mongo-express-basicauth-user
    password: *mongo-express-basicauth-password
  deployment:
    <<: *affinity-db
  ingress:
    default:
      # To use a custom domain name
      # hosts:
      #   - *mongo-express-host
      # To issue letsencrypt certificate for this domain name
      # certManager:
      #   enabled: true
      # To use TLS for this domain name
      # tls:
      #   - hosts:
      #       - *mongo-express-host

#######################
# Prometheus operator #
#######################

prometheus-operator:
  prometheusOperator:
    # To set a specific affinity
    # <<: *affinity-logging
  prometheus:
    prometheusSpec:
      # To set a specific affinity
      # <<: *affinity-logging
      # To use a persistent volume
      # storageSpec:
      #   volumeClaimTemplate:
      #     spec:
      #       accessModes: ["ReadWriteOnce"]
      #       resources:
      #         requests:
      #           storage: 5Gi
  alertmanager:
    alertmanagerSpec:
      # To set a specific affinity
      <<: *affinity-logging
  grafana:
    # To set a specific affinity
    <<: *affinity-logging
    adminPassword: *grafana-admin-password
    env:
      GF_SERVER_DOMAIN: *grafana-host

